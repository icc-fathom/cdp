// Code generated by cdpgen. DO NOT EDIT.

package cdp

import (
	"github.com/icc-fathom/cdp/protocol/accessibility"
	"github.com/icc-fathom/cdp/protocol/animation"
	"github.com/icc-fathom/cdp/protocol/audits"
	"github.com/icc-fathom/cdp/protocol/autofill"
	"github.com/icc-fathom/cdp/protocol/backgroundservice"
	"github.com/icc-fathom/cdp/protocol/bluetoothemulation"
	"github.com/icc-fathom/cdp/protocol/browser"
	"github.com/icc-fathom/cdp/protocol/cachestorage"
	"github.com/icc-fathom/cdp/protocol/cast"
	"github.com/icc-fathom/cdp/protocol/console"
	"github.com/icc-fathom/cdp/protocol/css"
	"github.com/icc-fathom/cdp/protocol/database"
	"github.com/icc-fathom/cdp/protocol/debugger"
	"github.com/icc-fathom/cdp/protocol/deviceaccess"
	"github.com/icc-fathom/cdp/protocol/deviceorientation"
	"github.com/icc-fathom/cdp/protocol/dom"
	"github.com/icc-fathom/cdp/protocol/domdebugger"
	"github.com/icc-fathom/cdp/protocol/domsnapshot"
	"github.com/icc-fathom/cdp/protocol/domstorage"
	"github.com/icc-fathom/cdp/protocol/emulation"
	"github.com/icc-fathom/cdp/protocol/eventbreakpoints"
	"github.com/icc-fathom/cdp/protocol/extensions"
	"github.com/icc-fathom/cdp/protocol/fedcm"
	"github.com/icc-fathom/cdp/protocol/fetch"
	"github.com/icc-fathom/cdp/protocol/filesystem"
	"github.com/icc-fathom/cdp/protocol/headlessexperimental"
	"github.com/icc-fathom/cdp/protocol/heapprofiler"
	"github.com/icc-fathom/cdp/protocol/indexeddb"
	"github.com/icc-fathom/cdp/protocol/input"
	"github.com/icc-fathom/cdp/protocol/inspector"
	"github.com/icc-fathom/cdp/protocol/io"
	"github.com/icc-fathom/cdp/protocol/layertree"
	"github.com/icc-fathom/cdp/protocol/log"
	"github.com/icc-fathom/cdp/protocol/media"
	"github.com/icc-fathom/cdp/protocol/memory"
	"github.com/icc-fathom/cdp/protocol/network"
	"github.com/icc-fathom/cdp/protocol/overlay"
	"github.com/icc-fathom/cdp/protocol/page"
	"github.com/icc-fathom/cdp/protocol/performance"
	"github.com/icc-fathom/cdp/protocol/performancetimeline"
	"github.com/icc-fathom/cdp/protocol/preload"
	"github.com/icc-fathom/cdp/protocol/profiler"
	"github.com/icc-fathom/cdp/protocol/pwa"
	"github.com/icc-fathom/cdp/protocol/runtime"
	"github.com/icc-fathom/cdp/protocol/schema"
	"github.com/icc-fathom/cdp/protocol/security"
	"github.com/icc-fathom/cdp/protocol/serviceworker"
	"github.com/icc-fathom/cdp/protocol/storage"
	"github.com/icc-fathom/cdp/protocol/systeminfo"
	"github.com/icc-fathom/cdp/protocol/target"
	"github.com/icc-fathom/cdp/protocol/tethering"
	"github.com/icc-fathom/cdp/protocol/tracing"
	"github.com/icc-fathom/cdp/protocol/webaudio"
	"github.com/icc-fathom/cdp/protocol/webauthn"
	"github.com/icc-fathom/cdp/rpcc"
)

// Client represents a Chrome DevTools Protocol client that can be used to
// invoke methods or listen to events in every CDP domain. The Client consumes
// a rpcc connection, used to invoke the methods.
type Client struct {
	Accessibility        Accessibility
	Animation            Animation
	Audits               Audits
	Autofill             Autofill
	BackgroundService    BackgroundService
	BluetoothEmulation   BluetoothEmulation
	Browser              Browser
	CSS                  CSS
	CacheStorage         CacheStorage
	Cast                 Cast
	Console              Console
	DOM                  DOM
	DOMDebugger          DOMDebugger
	DOMSnapshot          DOMSnapshot
	DOMStorage           DOMStorage
	Database             Database
	Debugger             Debugger
	DeviceAccess         DeviceAccess
	DeviceOrientation    DeviceOrientation
	Emulation            Emulation
	EventBreakpoints     EventBreakpoints
	Extensions           Extensions
	FedCM                FedCM
	Fetch                Fetch
	FileSystem           FileSystem
	HeadlessExperimental HeadlessExperimental
	HeapProfiler         HeapProfiler
	IO                   IO
	IndexedDB            IndexedDB
	Input                Input
	Inspector            Inspector
	LayerTree            LayerTree
	Log                  Log
	Media                Media
	Memory               Memory
	Network              Network
	Overlay              Overlay
	PWA                  PWA
	Page                 Page
	Performance          Performance
	PerformanceTimeline  PerformanceTimeline
	Preload              Preload
	Profiler             Profiler
	Runtime              Runtime
	Schema               Schema
	Security             Security
	ServiceWorker        ServiceWorker
	Storage              Storage
	SystemInfo           SystemInfo
	Target               Target
	Tethering            Tethering
	Tracing              Tracing
	WebAudio             WebAudio
	WebAuthn             WebAuthn
}

// NewClient returns a new Client that uses conn
// for communication with the debugging target.
func NewClient(conn *rpcc.Conn) *Client {
	return &Client{
		Accessibility:        accessibility.NewClient(conn),
		Animation:            animation.NewClient(conn),
		Audits:               audits.NewClient(conn),
		Autofill:             autofill.NewClient(conn),
		BackgroundService:    backgroundservice.NewClient(conn),
		BluetoothEmulation:   bluetoothemulation.NewClient(conn),
		Browser:              browser.NewClient(conn),
		CSS:                  css.NewClient(conn),
		CacheStorage:         cachestorage.NewClient(conn),
		Cast:                 cast.NewClient(conn),
		Console:              console.NewClient(conn),
		DOM:                  dom.NewClient(conn),
		DOMDebugger:          domdebugger.NewClient(conn),
		DOMSnapshot:          domsnapshot.NewClient(conn),
		DOMStorage:           domstorage.NewClient(conn),
		Database:             database.NewClient(conn),
		Debugger:             debugger.NewClient(conn),
		DeviceAccess:         deviceaccess.NewClient(conn),
		DeviceOrientation:    deviceorientation.NewClient(conn),
		Emulation:            emulation.NewClient(conn),
		EventBreakpoints:     eventbreakpoints.NewClient(conn),
		Extensions:           extensions.NewClient(conn),
		FedCM:                fedcm.NewClient(conn),
		Fetch:                fetch.NewClient(conn),
		FileSystem:           filesystem.NewClient(conn),
		HeadlessExperimental: headlessexperimental.NewClient(conn),
		HeapProfiler:         heapprofiler.NewClient(conn),
		IO:                   io.NewClient(conn),
		IndexedDB:            indexeddb.NewClient(conn),
		Input:                input.NewClient(conn),
		Inspector:            inspector.NewClient(conn),
		LayerTree:            layertree.NewClient(conn),
		Log:                  log.NewClient(conn),
		Media:                media.NewClient(conn),
		Memory:               memory.NewClient(conn),
		Network:              network.NewClient(conn),
		Overlay:              overlay.NewClient(conn),
		PWA:                  pwa.NewClient(conn),
		Page:                 page.NewClient(conn),
		Performance:          performance.NewClient(conn),
		PerformanceTimeline:  performancetimeline.NewClient(conn),
		Preload:              preload.NewClient(conn),
		Profiler:             profiler.NewClient(conn),
		Runtime:              runtime.NewClient(conn),
		Schema:               schema.NewClient(conn),
		Security:             security.NewClient(conn),
		ServiceWorker:        serviceworker.NewClient(conn),
		Storage:              storage.NewClient(conn),
		SystemInfo:           systeminfo.NewClient(conn),
		Target:               target.NewClient(conn),
		Tethering:            tethering.NewClient(conn),
		Tracing:              tracing.NewClient(conn),
		WebAudio:             webaudio.NewClient(conn),
		WebAuthn:             webauthn.NewClient(conn),
	}
}
